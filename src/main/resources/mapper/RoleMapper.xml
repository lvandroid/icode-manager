<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bsty.icode.dao.RoleDao">
    <resultMap id="getRoleDTO" type="com.bsty.icode.dto.RoleDTO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <collection property="routers" ofType="com.bsty.icode.bean.Router">
            <id column="router_id" property="id" jdbcType="BIGINT"/>
            <!--            <result column="router_id" jdbcType="BIGINT"/>-->
        </collection>
    </resultMap>
    <update id="updateRole" parameterType="com.bsty.icode.bean.Role">
        update role
        set name=#{name},
            description =#{description}
        where id = #{id}
    </update>
    <delete id="delById" parameterType="long">
        delete
        from role
        where role.id = #{id}
    </delete>
    <delete id="delUserRole" parameterType="long">
        delete
        from user_role
        where user_id = #{userId}
    </delete>
    <select id="getRolesByUserId" resultType="com.bsty.icode.bean.Role">
        SELECT A.id, A.name
        FROM role A
                 LEFT JOIN user_role B ON A.id = B.role_id
        WHERE B.user_id = #{userId}
    </select>
    <select id="findAll" resultMap="getRoleDTO">
        select r.id          AS id,
               r.name        AS name,
               r.description AS description,
               rr.id         as rr_id,
               rr.router_id  AS router_id
        from role r
                 left join role_router rr on rr.role_id = r.id
    </select>

    <insert id="addRole" parameterType="com.bsty.icode.bean.Role" useGeneratedKeys="true" keyProperty="id">
        insert into role(name, description)
        values (#{name}, #{description})
    </insert>
    <insert id="addUser" parameterType="long">
        insert into user_role (user_id, role_id, root_role) values
        <foreach collection="roleIds" item="id" index="index" separator=",">
            (#{userId},#{id},false)
        </foreach>
    </insert>
    <insert id="addUserRootRole">
        insert into user_role (user_id, role_id,root_role) values
        (#{userId},#{rootRoleId},true)
    </insert>
</mapper>